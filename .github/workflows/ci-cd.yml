# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# Trigger configuration : https://gist.github.com/myobie/671d2f2a1e503efa0c05e7b865c26a9d

name: "CI/CD"
on:
    push:
        branches: [develop]
        paths:
            - "packages/nc-gui/**"
            - "scripts/cypress/**"
            - "packages/nocodb/**"
            - ".github/workflows/ci-cd.yml"
    pull_request:
        types: [opened, reopened, synchronize, ready_for_review, labeled]
        branches: [develop]
        paths:
            - "packages/nc-gui/**"
            - "scripts/cypress/**"
            - "packages/nocodb/**"
            - ".github/workflows/ci-cd.yml"
jobs:
    #
    # cypress-restTableOps-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/restTableOps.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-restTableOps-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-restViews-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/restViews.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-restViews-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-restRoles-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/restRoles.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-restRoles-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-restMisc-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/restMisc.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-restMisc-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-xcdb-restTableOps-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:xcdb-api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/xcdb-restTableOps.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-xcdb-restTableOps-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-xcdb-restViews-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:xcdb-api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/xcdb-restViews.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-xcdb-restViews-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-xcdb-restRoles-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:xcdb-api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/xcdb-restRoles.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-xcdb-restRoles-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-xcdb-restMisc-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:xcdb-api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/xcdb-restMisc.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-xcdb-restMisc-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-pg-restTableOps-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/cypress/docker-compose-pg.yml up -d
    #         spec: "./scripts/cypress/integration/test/pg-restTableOps.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-pg-restTableOps-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-pg-restViews-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/cypress/docker-compose-pg.yml up -d
    #         spec: "./scripts/cypress/integration/test/pg-restViews.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-pg-restViews-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-pg-restRoles-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/cypress/docker-compose-pg.yml up -d
    #         spec: "./scripts/cypress/integration/test/pg-restRoles.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-pg-restRoles-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cypress-pg-restMisc-run-cache:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/cypress/docker-compose-pg.yml up -d
    #         spec: "./scripts/cypress/integration/test/pg-restMisc.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-pg-restMisc-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cy-quick-sqlite:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           cp ./scripts/cypress/fixtures/quickTest/noco_0_91_7.db ./packages/nocodb/noco.db
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/quickTest.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cy-quick-sqlite-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # cy-quick-pg:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           docker-compose -f ./scripts/cypress/docker-compose-pg-cy-quick.yml up -d
    #           npm run start:api:cache:pg:cyquick
    #           npm run start:web
    #         spec: "./scripts/cypress/integration/test/quickTest.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cy-quick-pg-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    # unit-tests:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: install dependencies nocodb-sdk
    #       working-directory: ./packages/nocodb-sdk
    #       run: npm install
    #     - name: build nocodb-sdk
    #       working-directory: ./packages/nocodb-sdk
    #       run: npm run build:main
    #     - name: Install dependencies
    #       working-directory: ./packages/nocodb
    #       run: npm install
    #     - name: setup mysql
    #       working-directory: ./
    #       run: docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #     - name: run unit tests
    #       working-directory: ./packages/nocodb
    #       run: npm run test:unit
    # cypress-db-independent:
    #   runs-on: ubuntu-20.04
    #   if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
    #   steps:
    #     - name: Setup Node
    #       uses: actions/setup-node@v1
    #       with:
    #         node-version: 16.15.0
    #     - name: Checkout
    #       uses: actions/checkout@v2
    #       with:
    #         fetch-depth: 0
    #     - name: Cache node modules
    #       uses: actions/cache@v2
    #       env:
    #         cache-name: cache-node-modules

    #       with:
    #         # npm cache files are stored in `~/.npm` on Linux/macOS
    #         path: ~/.npm
    #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #         restore-keys: |
    #           ${{ runner.os }}-build-${{ env.cache-name }}-
    #           ${{ runner.os }}-build-
    #           ${{ runner.os }}-
    #     - name: Set env
    #       run: echo "NODE_ENV=test" >> $GITHUB_ENV
    #     - name: Cypress run
    #       uses: cypress-io/github-action@v2
    #       with:
    #         start: |
    #           npm run start:api:cache
    #           npm run start:web
    #           docker-compose -f ./scripts/docker-compose-cypress.yml up -d
    #         spec: "./scripts/cypress/integration/test/db-independent.js"
    #         wait-on: "http://localhost:8080, http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png"
    #         wait-on-timeout: 1200
    #         config-file: scripts/cypress/cypress.json
    #     - name: Upload screenshots
    #       if: always()
    #       uses: actions/upload-artifact@v2
    #       with:
    #         name: cypress-restMisc-run-cache-snapshots
    #         path: scripts/cypress/screenshots
    #         retention-days: 2
    playwright:
      runs-on: ubuntu-20.04
      if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'trigger-CI') || !github.event.pull_request.draft }}
      steps:
        - name: Setup Node
          uses: actions/setup-node@v1
          with:
            node-version: 16.15.0
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Cache node modules
          uses: actions/cache@v2
          env:
            cache-name: cache-node-modules

          with:
            # npm cache files are stored in `~/.npm` on Linux/macOS
            path: ~/.npm
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-
        - name: Set env
          run: echo "TEST=true" >> $GITHUB_ENV
        - name: install dependencies nocodb-sdk
          working-directory: ./packages/nocodb-sdk
          run: npm install
        - name: build nocodb-sdk
          working-directory: ./packages/nocodb-sdk
          run: npm run build:main
        - name: Install dependencies
          working-directory: ./packages/nocodb
          run: npm install
        - name: setup mysql
          working-directory: ./
          run: docker-compose -f ./scripts/docker-compose-cypress.yml up -d
        - name: run frontend
          run: npm run start:web &
        - name: Run backend
          working-directory: ./packages/nocodb
          run: npm run watch:run:playwright &
        - name: Wait for frontend
          run: |
            while ! curl --output /dev/null --silent --head --fail http://localhost:3000/_nuxt/assets/img/icons/512x512-trans.png; do
              printf '.'
              sleep 2
            done
        - name: Wait for backend
          run: |
            while ! curl --output /dev/null --silent --head --fail http://localhost:8080; do
              printf '.'
              sleep 2
            done
        - name: Install dependencies
          working-directory: ./scripts/playwright
          run: npm ci
        - name: Install Playwright Browsers
          working-directory: ./scripts/playwright
          run: npx playwright install --with-deps
        - name: Run Playwright tests
          working-directory: ./scripts/playwright
          run: npx playwright test
        - uses: actions/upload-artifact@v2
          if: always()
          with:
            name: playwright-report
            path: ./scripts/playwright/output/
            retention-days: 30
        